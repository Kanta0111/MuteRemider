{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { mediaQ } from '../../../../modules/styles/media';\nimport UnmuteButton from '../../atoms/UnmuteButton';\nimport ShowTweetsButton from '../../atoms/ShowTweetsButton';\nimport MutedTweetList from '../TweetList';\nimport TwAppsConst from '../../TwAppsConst';\nimport { requestUnmuteUser } from '../../../../redux/reducers/resource/mutedUsers';\nvar Item = styled.li.withConfig({\n  displayName: \"ListedUser__Item\",\n  componentId: \"sc-1o71l5t-0\"\n})([\"list-style:none;width:100%;\"]);\n\nvar createTopContainer = function createTopContainer(isMuted) {\n  return styled.div.withConfig({\n    displayName: \"ListedUser\",\n    componentId: \"sc-1o71l5t-1\"\n  })([\"align-items:center;background:\", \";display:flex;height:95px;transition:.5s;\", \"{height:190px;}\"], isMuted ? function (_ref) {\n    var theme = _ref.theme;\n    return theme.colors.basicWhite;\n  } : function (_ref2) {\n    var theme = _ref2.theme;\n    return theme.colors.unmutedUserBg;\n  }, mediaQ.pc);\n};\n\nvar BottomContainer = styled.div.withConfig({\n  displayName: \"ListedUser__BottomContainer\",\n  componentId: \"sc-1o71l5t-2\"\n})([\"display:flex;\"]);\nvar Icon = styled.img.withConfig({\n  displayName: \"ListedUser__Icon\",\n  componentId: \"sc-1o71l5t-3\"\n})([\"border-radius:50%;height:70px;margin:0 40px 0 10px;width:70px;\", \"{height:140px;width:140px;margin:0 70px 0 40px;}\"], mediaQ.pc);\nvar UserNameContainer = styled.div.withConfig({\n  displayName: \"ListedUser__UserNameContainer\",\n  componentId: \"sc-1o71l5t-4\"\n})([\"align-items:flex-start;display:flex;flex-direction:column;font-weight:bold;height:100%;justify-content:center;max-width:70%;padding-top:8px;\", \"{width:420px;}\"], mediaQ.pc);\nvar UserName = styled.p.withConfig({\n  displayName: \"ListedUser__UserName\",\n  componentId: \"sc-1o71l5t-5\"\n})([\"font-size:18px;margin-bottom:5px;\", \"{font-size:1.5rem;margin-bottom:17px;line-height:1.9rem;padding-right:30px;}\"], mediaQ.pc);\n\nvar stateSelector = function stateSelector(state) {\n  return state.basePath;\n};\n\nvar ListedUser = function ListedUser(_ref3) {\n  var mutedUserInfo = _ref3.mutedUserInfo,\n      index = _ref3.index,\n      isUserMuted = _ref3.isUserMuted;\n\n  var _useState = useState(TwAppsConst.SHOW_TWEETS_INITIAL),\n      showTweets = _useState[0],\n      setShowTweets = _useState[1];\n\n  var baseUrl = useSelector(stateSelector);\n  var mutedUser = mutedUserInfo.muted_user;\n  var dispatch = useDispatch();\n  var listedUserRef = React.createRef();\n\n  var handleUnmuteClicked = function handleUnmuteClicked() {\n    var accessPath = isUserMuted ? TwAppsConst.UNMUTE_USER_ENDPOINT : TwAppsConst.MUTE_USER_ENDPOINT; // 対象ユーザーがミュートか非ミュートかでエンドポイントが変わる\n\n    var endpoint = \"\".concat(baseUrl).concat(accessPath, \"/\").concat(mutedUserInfo.muted_user.screen_name);\n    requestUnmuteUser(endpoint, mutedUserInfo.muted_user.screen_name, index, dispatch);\n  };\n  /**\n   * 「ツイートを見る」ボタンクリック時の動作\n   * ユーザーのツイート数とツイートリストの高さをステートに保存する\n   */\n\n\n  var handleShowTweetsClicked = function handleShowTweetsClicked() {\n    if (showTweets === TwAppsConst.SHOW_TWEETS_OPENED) {\n      setShowTweets(TwAppsConst.SHOW_TWEETS_CLOSED);\n      return;\n    }\n\n    setShowTweets(TwAppsConst.SHOW_TWEETS_OPENED);\n  };\n\n  var TopContainer = createTopContainer(isUserMuted);\n  return __jsx(Item, {\n    ref: listedUserRef\n  }, __jsx(TopContainer, null, __jsx(Icon, {\n    src: mutedUser.profile_image_url_https,\n    alt: \"icon\"\n  }), __jsx(UserNameContainer, null, __jsx(UserName, null, mutedUser.user_name), __jsx(UserName, null, \"@\", mutedUser.screen_name)), __jsx(UnmuteButton, {\n    isForMobile: false,\n    muted: isUserMuted,\n    onClick: function onClick() {\n      handleUnmuteClicked();\n    }\n  })), __jsx(MutedTweetList, {\n    showTweets: showTweets,\n    mutedTweets: mutedUserInfo.tweets_info\n  }), __jsx(BottomContainer, null, __jsx(UnmuteButton, {\n    muted: isUserMuted,\n    onClick: function onClick() {\n      handleUnmuteClicked();\n    }\n  }), __jsx(ShowTweetsButton, {\n    showTweets: showTweets,\n    onClick: function onClick() {\n      handleShowTweetsClicked();\n    }\n  })));\n};\n\nexport default ListedUser;","map":null,"metadata":{},"sourceType":"module"}