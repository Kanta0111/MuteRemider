{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styled, { keyframes } from 'styled-components';\nimport TwAppsConst from '../../TwAppsConst';\nimport ListedUser from '../ListedUser';\nimport { requestMutedUsers } from '../../../../redux/reducers/resource/mutedUsers';\nimport { mediaQ } from '../../../../modules/styles/media';\nimport { theme } from '../../../../modules/styles/theme';\n\nconst mute_icon = require('../../../../../img/mute_icon.svg');\n\nconst animationToLeft = keyframes([\"0%{padding-left:\", \"px;}100%{padding-left:\", \"px;}\"], theme.sizes.muterMenuWidth, theme.sizes.muterMenuWidth - theme.sizes.menuAmimationDistance);\nconst animationToRight = keyframes([\"0%{padding-left:\", \"px;}100%{padding-left:\", \"px;}\"], theme.sizes.muterMenuWidth - theme.sizes.menuAmimationDistance, theme.sizes.muterMenuWidth);\nconst Discription = styled.h2.withConfig({\n  displayName: \"UserList__Discription\",\n  componentId: \"pm1jgv-0\"\n})([\"background:\", \" url(\", \") center center / auto 70px no-repeat;color:\", \";font-size:1.25rem;height:80px;line-height:80px;margin-top:50px;text-align:center;width:100%;\", \"{font-size:2.5rem;font-weight:bold;height:120px;line-height:120px;}\"], ({\n  theme\n}) => theme.colors.basicGray, mute_icon, ({\n  theme\n}) => theme.colors.iconGray, mediaQ.pc);\n\nconst createList = isMenuOpened => styled.ul.withConfig({\n  displayName: \"UserList__createList\",\n  componentId: \"pm1jgv-1\"\n})([\"padding-bottom:50px;\", \"{border-bottom:solid 2px \", \";border-top:solid 2px \", \";padding-bottom:0;animation:\", \" .3s forwards;}\"], mediaQ.pc, ({\n  theme\n}) => theme.colors.darkGray, ({\n  theme\n}) => theme.colors.darkGray, isMenuOpened ? animationToRight : animationToLeft);\n\nconst stateSelector = state => ({\n  mutedUsers: state.mutedUsers,\n  muted: state.muted,\n  basePath: state.basePath,\n  isMuterMenuOpened: state.isMuterMenuOpened,\n  userInfo: state.userInfo\n});\n\nconst UserList = () => {\n  const {\n    basePath,\n    mutedUsers,\n    muted,\n    isMuterMenuOpened\n  } = useSelector(stateSelector);\n  const dispatch = useDispatch();\n  const List = createList(isMuterMenuOpened);\n  useEffect(() => {\n    requestMutedUsers(basePath + TwAppsConst.MUTED_USERS_ENDPOINT, dispatch);\n  }, []);\n  return __jsx(\"div\", {\n    className: \"muter-content\"\n  }, __jsx(Discription, null, \"\\u3042\\u306A\\u305F\\u304C\\u30DF\\u30E5\\u30FC\\u30C8\\u3057\\u3066\\u3044\\u308B\\u30E6\\u30FC\\u30B6\\u30FC\"), __jsx(List, null, mutedUsers.map((mutedUserInfo, index) => __jsx(ListedUser, {\n    key: mutedUserInfo.muted_user.user_id,\n    mutedUserInfo: mutedUserInfo,\n    index: index,\n    isUserMuted: muted[index]\n  }))));\n};\n\nexport default UserList;","map":null,"metadata":{},"sourceType":"module"}